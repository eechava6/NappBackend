function jacobi(A, b, x , normVal, tol, iters)
    if(D has 0) return err
    L = -1 * triangularLow(A) + diagonal(A)
    U = -1 * triangularUp(A) + diagonal(A)
    T = inverse(D)*(L+U)
    C = inverse(D)*b
    SR= max(abs(eigenValues(T)))
    if(SR > 1) return err
    ite = 0
    while(norm > tol && ite < iteMax)
        xold = x
        x = (T*xold)+C
        iters.add(ite, norm, x)
        norm = norm(xold-x,normVal)
        ite += 1
    return iters