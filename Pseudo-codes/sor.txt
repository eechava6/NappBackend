function jacobi(A, b, x , normVal, tol, iteMax,w)
    if(D has 0) return error 
    L = -1 * tringularLow(A) + Diagonal(A)
    U = -1 * tringularUp(A) + Diagonal(A)
    T = inverse(D-w*L)*(1-w)*(D+w*U)
    C = w*(inverse(D-(w*L))*b)
    SR= max(abs(eigenValues(T)))
    if(SR > 1) return err
    ite = 0
    while(norm > tol && ite < iteMax)
        xold = x
        x = (T*xold)+C
        iters.add(ite, norm, x)
        norm = norm(xold-x,normVal)
        ite += 1
    return iters